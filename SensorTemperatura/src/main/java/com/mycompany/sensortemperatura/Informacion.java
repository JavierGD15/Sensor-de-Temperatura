/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sensortemperatura;

import com.fazecast.jSerialComm.SerialPort;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author javie
 */
public class Informacion extends javax.swing.JFrame {

    DatabaseManager dbManager = new DatabaseManager();

    public Informacion(SerialPort port) {

        initComponents();
        SerialReader serialReader = new SerialReader(port); // Crea el hilo de lectura
        serialReader.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        labelTemp = new javax.swing.JLabel();
        labelHum = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sensor de Temperatura");
        setLocation(new java.awt.Point(150, 150));

        jLabel1.setText("Lector de temperatura y Humedad");

        jLabel2.setText("Temperatura Celsius: ");

        jLabel3.setText("Sensor Humedad:");

        jToggleButton1.setText("Exportar PDF");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Generar Gráfica");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Eliminar Registros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        labelTemp.setText("0.00");

        labelHum.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jToggleButton1)
                        .addGap(57, 57, 57)
                        .addComponent(jToggleButton2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelHum))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelTemp))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(96, 96, 96)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton1)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelTemp))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelHum))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
       String filePath = "sensor_data.pdf"; // Ruta donde se guardará el PDF
        dbManager.exportarAPDF(filePath);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que quieres limpiar todos los registros?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            dbManager.limpiarRegistros(); // Llama al método para limpiar registros
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        ArrayList<SensorData> top3 = dbManager.obtenerTop3Temperaturas(); // Obtener top 3 temperaturas
        
        if (top3.size() > 0) {
            TemperatureTrendChart chart = new TemperatureTrendChart("Tendencia de Temperaturas", top3);
            chart.setSize(800, 600);
            chart.setLocationRelativeTo(null);
            chart.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "No hay datos disponibles para mostrar.");
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    public void obtenerEtiquetas(String humedad, String temp) {

        // Actualizar la etiqueta de humedad
        this.labelHum.setText(humedad); // Agregar nueva humedad

        // Actualizar la etiqueta de temperatura
        this.labelTemp.setText(temp); // Agregar nueva temperatura
    }

    public class SerialReader extends Thread {

        private SerialPort serialPort;
        private boolean running = true;

        public SerialReader(SerialPort port) {
            this.serialPort = port;
        }

        @Override
        public void run() {
            // Mostrar diálogo de espera
            JOptionPane.showMessageDialog(null, "Obteniendo información, espera un momento...");

            while (running) {
                if (serialPort.bytesAvailable() > 0) {

                    byte[] readBuffer = new byte[1024];
                    int numRead = serialPort.readBytes(readBuffer, readBuffer.length);
                    String data = new String(readBuffer, 0, numRead);
                    String[] values = data.split(",");

                    if (values.length == 2) {
                        String humedad = values[1];
                        String temp = values[0];
                        labelHum.setText(humedad);
                        labelTemp.setText(temp);

                        // Generar ID basado en la fecha
                        String id = LocalDate.now().toString().replace("-", ""); // YYYYMMDD
                        SensorData sensorData = new SensorData(id, Float.parseFloat(humedad), Float.parseFloat(temp));

                        // Insertar en la base de datos
                        dbManager.crear(sensorData);
                    }
                } else {
                    try {
                        Thread.sleep(1000); // Espera 1 minuto antes de volver a comprobar
                    } catch (InterruptedException e) {
                        running = false;
                        this.start();
                    }
                }
            }
           
        }

        public void stopReading() {
            running = false;

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JLabel labelHum;
    private javax.swing.JLabel labelTemp;
    // End of variables declaration//GEN-END:variables
}
